const{Component,html,useState,useCallback,useRef}=window.neverland;import{Panel,PanelHeader,PanelBody}from"./panel.js";const Card=(e,t,a=!1)=>html`<div class=${"card "+(a?"":"mt-2")}>${e?html`<h5 class="card-header">${e}</h5>`:""}<div class="card-body">${t}</div></div>`,ButtonsRow=a=>{var e=a.data.map(e=>{return html`<button class="btn btn-primary m-1" onclick=${t=e.id,()=>a.handler(t)} type="button">${e.label}</button>`;var t});return html`<div class="container d-flex flex-wrap justify-content-start" style="width:630px">${e}</div>`},ProductionSetupBlock=Component(e=>{const t=e.handler;var a=e=>html`<div class="col p-1 d-flex align-items-center justify-content-center border"><button class="btn btn-success btn-sm" type="button" onclick=${useCallback(()=>t(e.option))}>${e.label}</button></div>`;return html`<div class="container"><div class="row">${e.buttons.slice(0,3).map(a)}</div><div class="row">${e.buttons.slice(3,6).map(a)}</div></div>`}),NavItem=Component((e,t,a)=>{return html`<li class="nav-item" role="presentation"><button onclick=${function(){t(e.id),a(e.id)}} class="nav-link ${e.id===e.activeTab?"active":""}" id=${e.id} data-bs-toggle="tab" data-bs-target=${"#"+e.targetId} type="button" role="tab" aria-controls=${e.targetId} aria-selected=${(e.id===e.activeTab).toString()}>${e.label}</button></li>`}),NavHeader=Component((e,t)=>{const[a,n]=useState("actions-tab");return html`<ul class="nav nav-tabs" role="tablist" id="myTab">${e.map(e=>NavItem({...e,activeTab:a},n,t))}</ul>`}),Switch=Component(t=>{var e=t.class||"";return html`<div class=${"form-check form-switch "+e}><input class="form-check-input" type="checkbox" id=${t.id} checked=${!!t.checked} onclick=${function(e){t.handler&&t.handler(t.id,this.checked)}}> <label class="form-check-label" for=${t.id}>${t.label}</label></div>`}),Range=Component(e=>{const l=useRef(),s=useRef();function t(){var e,t,a,n;e=l.current,t=s.current,a=e.value,n=e.min||0,e=e.max||100,e=Number(100*(a-n)/(e-n)),t.innerHTML=a,t.style.left=`calc(${e}% + (${8-.15*e}px))`}var a=e.colored||!1,n=e.min||0,r=e.max||100;const c=e.default||0;var o,i=e.value||c,d=e.showValue||!1,u=void 0===e.showLimits||e.showLimits;return html`<div>${e.label?html`<label class="form-check-label me-3" for=${e.id}>${e.label} ${d?`(${i})`:""}</label>`:""} ${u?html`<span class="range-edge-indicator">${n}</span>`:""}<div class="range-wrapper"><input class="form-check-input ${a?"range-colored":""}" type="range" id=${e.id} min=${n} max=${r} value=${i} ref=${l} oninput=${t} onmousedown=${function(){t(),s.current.classList.add("d-block"),s.current.classList.remove("d-none")}} onmouseup=${function(){s.current.classList.add("d-none"),s.current.classList.remove("d-block")}} onchange=${o="change",()=>{(e[o]||(()=>{}))(e.id,l?.current?.value||"")}}> <span class="bubble d-none" ref=${s}>${i}</span></div>${u?html`<span class="range-edge-indicator">${r}</span>`:""} <button class="btn btn-primary range-reset-btn" onclick=${function(){l?.current&&(l.current.value=c,e.change&&e.change(e.id,c),t())}}>‚ü≥</button></div>`}),LabeledInput=Component(t=>{var e=e=>()=>{(t[e]||(()=>{}))(t.id,a?.current?.value||"")};const a=useRef();let n;return n="number"===t.type?html`<input type=${t.type} id=${t.id} class="form-control form-control-sm" min=${void 0!==t.min?t.min:""} max=${void 0!==t.max?t.max:""} value=${t.value} placeholder=${t.placeholder} oninput=${e("input")} onchange=${e("change")} ref=${a}>`:html`<input type=${t.type} id=${t.id} class="form-control form-control-sm" value=${t.value} placeholder=${t.placeholder} oninput=${e("input")} onchange=${e("change")} ref=${a}>`,html`<div><label for=${t.id} class="form-label">${t.label}</label> ${n}</div>`}),Indicator=e=>{let t;switch(e.type){case"text":t=html`<span>${e.value}</span>`;break;case"visual":t=html`<span class="indicator ${e.value?"indicator-green":"indicator-red"}"></span>`}return html`<p class="h6 pb-0 mb-0 d-flex justify-content-between dotted-bottom">${e.label} <span>${t}</span></p>`},StatusPanel=e=>{var{type:e,text:t,label:a}=e,e="info"===e?"text-yellow":"error"===e?"text-red":"text-green";return html`<div class="status-panel"><p class="status-panel__status">${a}</p><p class="status-panel__status-text ${e}">${t}</p></div>`};export{Card,ButtonsRow,ProductionSetupBlock,NavHeader,NavItem,Switch,Range,LabeledInput,Indicator,Panel,PanelHeader,PanelBody,StatusPanel};