const sharedObjectId=window.infoBox.sharedObjectId,sharedObject=window[sharedObjectId],_=sharedObject.i18n["_"],{Component,html}=window.neverland,{store,useDispatch,useSelector}=sharedObject.store;import{Switch}from"../components/index.js";function openArmyDialog(){const t=sharedObject.commonApi,e=useDispatch();e({type:"BOT:HIDE_MAIN_WINDOW"}),t.showArmyDialog()}function armySetupSave(t,e){t=t||"Config_"+Date.now();var a=store.getState();const n={...a.botConfig};a=a.armySetup.units;if(0!==a.length){const i={},o=(i.allowDamaged=e,i.units=a,n.armyConfig[t]=i,useDispatch());o({type:"BOT:CONFIG_UPDATED",payload:n}),saveConfig(),setTimeout(()=>{resetHandler()},0)}}function allowDamagedSwitchHandler(t,e){const a=useDispatch();a({type:"BOT:ARMY_SETUP_UPDATED",payload:{allowDamaged:e}})}function nameHandler(t){t=t.target.value;const e=useDispatch();e({type:"BOT:ARMY_SETUP_UPDATED",payload:{name:t||""}})}function resetHandler(){const t=useDispatch();t({type:"BOT:ARMY_SETUP_UPDATED",payload:{name:"",allowDamaged:!1,units:[]}})}function editHandler(t){var e={...store.getState().botConfig}.armyConfig[t];const a=useDispatch();a({type:"BOT:ARMY_SETUP_UPDATED",payload:{name:t,allowDamaged:e.allowDamaged,units:e.units}})}function deleteHandler(t){const e={...store.getState().botConfig},a=(delete e.armyConfig[t],useDispatch());a({type:"BOT:CONFIG_UPDATED",payload:e}),saveConfig()}function getIconUrl(t){const e=sharedObject.bgApi;return e&&e.assetManager&&e.assetManager.getUnitIconUrl?e.assetManager.getUnitIconUrl(t):""}const UnitButton=t=>html`<div class="col p-1 d-flex align-items-center justify-content-center border"><button class="btn btn-light btn-sm" type="button" onclick=${openArmyDialog}>${t.unit?html`<img src=${getIconUrl(t.unit)}/>`:"+"}</button></div>`,ArmySetupField=Component(e=>html`<div class="container"><div class="row">${[0,2,4,6].map(t=>UnitButton({idx:t,unit:e[t]}))}</div><div class="row">${[1,3,5,7].map(t=>UnitButton({idx:t,unit:e[t]}))}</div></div>`),getUnitsRow=function(t,n){return html`<div class="row">${t.reduce((t,e,a)=>(a%2!=(n?1:0)&&t.push(html`<div class="col p-1 d-flex align-items-center justify-content-center border"><img src=${getIconUrl(e)}/></div>`),t),[])}</div>`},ArmyTab=Component(()=>{var t=useSelector(t=>t),e=t.botConfig,t=t.armySetup;const{name:a,allowDamaged:n,units:i}=t;return html`<div class="tab-pane fade pt-3" id="army" role="tabpanel" aria-labelledby="army-tab">${Switch({id:"army_autoShowPanelSwith",label:_("main_window.tabs.army.auto_open"),checked:e.army.autoOpenPanel,handler:armyPanelSwitchHandler})}<div class="dropdown-divider"></div><div class="container" id="armySetup"><div class="row"><div class="col col-8">${ArmySetupField(i)}</div><div class="col col-4"><div class="btn-group-vertical d-flex flex-column align-items-center" role="group"><input type="text" class="form-control form-control-sm" placeholder="${_("main_window.tabs.army.name")}" value=${a||""} onChange=${nameHandler}> <button class="btn btn-primary btn-sm m-1" type="button" onclick=${()=>{armySetupSave(a,n)}}>${_("main_window.tabs.army.save")}</button> <button class="btn btn-primary btn-sm m-1" type="button" onclick=${resetHandler}>${_("main_window.tabs.army.reset")}</button> ${Switch({id:"army_allowDamaged-switch",label:_("main_window.tabs.army.damaged"),checked:t.allowDamaged,handler:allowDamagedSwitchHandler})}</div></div></div></div><div class="dropdown-divider"></div><div class="container" id="armyList" style="overflow-y:auto;max-height:230px"><h4 class="text-center">${_("main_window.tabs.army.list")}</h4>${Object.entries(e.armyConfig).map(([t,e],a)=>html`<div class="row mt-3" name="armyListItem"><div class="col col-8"><div class="container" id="armyListItem">${getUnitsRow(e.units,1)} ${getUnitsRow(e.units,0)}</div></div><div class="col col-4"><div class="btn-group-vertical d-flex flex-column align-items-center" role="group"><p>${t}</p><button class="btn btn-primary btn-sm m-1" type="button" onclick=${()=>editHandler(t)}>${_("main_window.tabs.army.edit")}</button> <button class="btn btn-primary btn-sm m-1" type="button" onclick=${()=>deleteHandler(t)}>${_("main_window.tabs.army.del")}</button></div></div></div><div class="dropdown-divider"></div>`)}</div></div>`});async function armyPanelSwitchHandler(t,e){const a={...store.getState().botConfig},n=(a.army.autoOpenPanel=e,useDispatch());n({type:"BOT:CONFIG_UPDATED",payload:a}),saveConfig()}async function saveConfig(t=!1){const e=sharedObject.bgApi;var a=store.getState()["botConfig"];await e.setConfig(a,t)}export default ArmyTab;