const sharedObjectId=window.infoBox.sharedObjectId,sharedObject=window[sharedObjectId],_=sharedObject.i18n["_"],{Component,html}=window.neverland,{store,useDispatch,useSelector}=sharedObject.store;import{Switch,Card,Range,LabeledInput}from"../components/index.js";async function saveConfig(a=!1){const e=sharedObject.bgApi;var t=store.getState()["botConfig"];await e.setConfig(t,a)}const paramsMap={"gvg-auto-siege":"autoSiegeOnAttack","gvg-attack-speed":"attackDelay","gvg-change-army-damaged":"changeDamaged","damaged-percent":"damagedPercent"};async function onChangeProp(a,e){const t=useDispatch();a=paramsMap[a],"attackDelay"!==a&&"damagedPercent"!==a||(e=parseInt(e)||0)<0&&(e=0),a={type:"GVG:SETTINGS_UPDATED",payload:{[a]:e}};t(a),saveConfig()}const GVGTab=Component(()=>{var a=useSelector(a=>a.botConfig).gvg,e=a.attackDelay||0,t=a.autoSiegeOnAttack||!1,n=a.changeDamaged||!1,a=a.damagedPercent||0;return html`<div class="tab-pane fade" id="gvg" role="tabpanel" aria-labelledby="gvg-tab">${Card("Авто GVG",html`<div class="container">${Switch({id:"gvg-auto-siege",label:_("main_window.tabs.gvg.auto-siege"),checked:t,handler:onChangeProp})} ${Range({id:"gvg-attack-speed",label:_("main_window.tabs.gvg.delay"),min:0,max:1500,colored:!0,showValue:!0,value:e,default:500,change:onChangeProp})} ${Switch({id:"gvg-change-army-damaged",label:_("main_window.tabs.gvg.damaged"),checked:n,handler:onChangeProp})} ${LabeledInput({type:"number",id:"damaged-percent",label:_("main_window.tabs.gvg.damaged-percent"),value:a,placeholder:_("main_window.tabs.gvg.damaged-percent"),min:0,max:100,input:onChangeProp})}</div>`)}</div>`});export default GVGTab;