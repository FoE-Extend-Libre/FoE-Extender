const sharedObjectId=window.infoBox.sharedObjectId,sharedObject=window[sharedObjectId],{Component,html,useState,useCallback,useRef}=window.neverland,{store,useDispatch,useSelector}=sharedObject.store,bgApi=sharedObject.bgApi;import{Switch,Card,LabeledInput}from"../components/index.js";const IgnorTab=Component(()=>{var e=useSelector(e=>e);const t=e.nicknames,o=e.botConfig.ignored;e=useRef();const[n,a]=useState(!1),[i,s]=useState(""),[r,l]=useState(-1);e?.current;return html`<div class="tab-pane fade" id="ignor" role="tabpanel" aria-labelledby="ignor-tab">игнор лист<div class="input-group mb-3 autocomplete"><input type="text" id="ignor-input" class="form-control" placeholder="Username" aria-label="Username" aria-describedby="button-addon2" ref=${e} oninput=${function(e){a(""!==this.value),s(this.value),l(-1)}} onkeydown=${function(e){var t=this.parentNode.querySelectorAll("div.autocomplete-item");40==e.keyCode?(e.preventDefault(),r==t.length-1?l(0):l(r+1)):38==e.keyCode?(e.preventDefault(),r<=0?l(t.length-1):l(r-1)):13==e.keyCode&&(e.preventDefault(),-1<r&&this.parentNode.querySelector("div.autocomplete-active")?.click())}} onfocusout=${()=>a(!1)} value=${i} autocomplete="off"> ${n?html`<div id="ignor-inputautocomplete-list" class="autocomplete-items">${t.filter(e=>e.nick.toLowerCase().includes(i.toLowerCase())).map((t,e)=>{const o=(t=t.nick).toLowerCase();var n=i.toLowerCase();return html`<div class=${"autocomplete-item "+(r===e?"autocomplete-active":"")} onclick=${e=>{s(t),a(!1),e.stopPropagation()}}>${t.substr(0,o.indexOf(n))}<strong>${t.substr(o.indexOf(n),i.length)}</strong>${t.substr(o.indexOf(n)+i.length)}</div>`})}</div>`:""} <button class="btn btn-outline-secondary" type="button" onclick=${useCallback(()=>{ignorePlayer(i),s(""),a(!1)})}>Ignore</button></div><div class="container ignored-container"><div class="row"><div class="col col-6"><ul class="list-group" id="ignore-list">${o.map(e=>html`<li class="list-group-item d-flex justify-content-between"><span>${e} </span><a class="btn btn-outline-danger btn-sm" onclick=${useCallback(()=>unignorePlayer(e))}>X</a></li>`)}</ul></div></div></div></div>`});async function ignorePlayer(t){if(t){var e=store.getState();const o=e.botConfig.ignored;if(!o.some(e=>e===t)){const n={...e.botConfig},a=[...o],i=useDispatch();a.push(t),n.ignored=a,i({type:"BOT:CONFIG_UPDATED",payload:n}),await saveConfig()}}}async function unignorePlayer(t){if(t){var e=store.getState();const o=e.botConfig.ignored;if(o.some(e=>e===t)){const n={...e.botConfig},a=[...o],i=useDispatch();a.splice(a.indexOf(t),1),n.ignored=a,i({type:"BOT:CONFIG_UPDATED",payload:n}),await saveConfig()}}}async function saveConfig(e=!1){var t=store.getState()["botConfig"];await bgApi.setConfig(t,e)}export default IgnorTab;